---
title: Experimento com canvas - cubo
layout: experience
sections: ['experiences']
tags: ['canvas', 'tutorial']
---

<div class="container">
	<h3><i class="icon-beaker"></i> Cubo (orientado pelo mouse)</h3>
	<p>Baseando nesse <a href="http://www.html5canvastutorials.com/three/html5-canvas-webgl-rotating-cube" target="_blank">exemplo</a> de animação de um cubo utilizando <a href="http://threejs.org/" target="_blank"> Three.js</a>, iremos fazer o cubo se orientar de acordo com o movimento do mouse.</p>

	<h4>Primeiro passo</h4>
	<p>Iremos adicionar um parâmetro a função animate, que necessitaremos mais tarde. Substitua o código abaixo.</p>
	<pre><code class="lang-javascript">
	...
	var lastTime = 0;

		// this function is executed on each animation frame
	function animate(){
	</code></pre>
	por esse
	<pre><code class="lang-javascript">
	...
	var lastTime = 0;

	// this function is executed on each animation frame
	function animate(mouseEvent){
	</code></pre>

	<h4>Segundo passo</h4>
	<p>Iremos rotacionar a câmera de acordo com a posição do mouse.</p>
	<pre><code class="lang-javascript">
	...
	lastTime = time;

	//Adicione esta linha após a linha referenciada acima
	if(mouseEvent)camera.rotation.setZ((mouseEvent.offsetX/100 * 1)+(mouseEvent.offsetY/100 * 1));
	</code></pre>

	<h4>Terceiro passo</h4>
	<p>Remova o trecho abaixo</p>
	<pre><code class="lang-javascript">
	// request new frame
    requestAnimationFrame(function(){
        animate();
    });
	</code></pre>

	<h4>Quarto passo</h4>
	<p>Substitua o trecho abaixo para mudarmos as características do cubo e direcionar uma luz à uma das faces do cubo.
	<pre><code class="lang-javascript">
	// cube
	var cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), new THREE.MeshNormalMaterial());
	cube.overdraw = true;
	scene.add(cube);

	// start animation
	animate();
	</code></pre>
	por esse
	<pre><code class="lang-javascript">
	// cube
	var cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), new THREE.MeshLambertMaterial({
	color: 'purple' 
	}));
	cube.overdraw = true;
	cube.rotation.x = Math.PI * 0.1;
	scene.add(cube);

	// add subtle ambient lighting
	var ambientLight = new THREE.AmbientLight(0x000044);
	scene.add(ambientLight);

	// directional lighting
	var directionalLight = new THREE.DirectionalLight(0xffffff);
	directionalLight.position.set(1, 1, 1).normalize();
	scene.add(directionalLight);

	// start animation
	animate();

	document.querySelector("canvas").onmousemove = animate;
	</code></pre>
	</p>

	<h4>Resultado</h4>	
	<p><i class="icon-code"></i> <a href="#cube" class="show-code">Código-fonte</a></p>
	<div id="cube" class="code">
		<pre><code class="lang-javascript">// revolutions per second
	var angularSpeed = 0.2; 
	var lastTime = 0;

	// this function is executed on each animation frame
	function animate(mouseEvent){
	// update
	var time = (new Date()).getTime();
	var timeDiff = time - lastTime;
	var angleChange = angularSpeed * timeDiff * 2 * Math.PI / 1000;
	cube.rotation.y += angleChange;
	lastTime = time;

	if(mouseEvent)camera.rotation.setZ((mouseEvent.offsetX/100 * 1)+(mouseEvent.offsetY/100 * 1));

	// render
	renderer.render(scene, camera);

	// renderer
	var renderer = new THREE.WebGLRenderer();
	renderer.setSize(window.innerWidth, window.innerHeight);
	document.body.appendChild(renderer.domElement);

	// camera
	var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);
	camera.position.z = 500;

	// scene
	var scene = new THREE.Scene();
	        
	// cube
	var cube = new THREE.Mesh(new THREE.CubeGeometry(200, 200, 200), new THREE.MeshLambertMaterial({
	color: 'purple' 
	}));
	cube.overdraw = true;
	cube.rotation.x = Math.PI * 0.1;
	scene.add(cube);

	// add subtle ambient lighting
	var ambientLight = new THREE.AmbientLight(0x000044);
	scene.add(ambientLight);

	// directional lighting
	var directionalLight = new THREE.DirectionalLight(0xffffff);
	directionalLight.position.set(1, 1, 1).normalize();
	scene.add(directionalLight);

	// start animation
	animate();

	document.querySelector("canvas").onmousemove = animate;
		</code></pre>
	</div>

	<strong>Screenshot</strong>
	<p><img class="col-lg-12" src="/experiences/canvas/img/canvas02.png"></p>
	<p><a href="/experiences/canvas/canvas02.html" target="_blank" class="btn btn-primary"><i class="icon-eye-open"></i> Exibir resultado</a></p>
</div>